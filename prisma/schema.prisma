generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Product {
  id          String     @id @default(uuid()) @db.Uuid
  createdAt   DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime   @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt   DateTime?  @map("deleted_at") @db.Timestamptz(6)
  name        String     @db.VarChar(255)
  description String     @db.Text
  images      String[]   @db.Text
  categoryId  String     @map("category_id") @db.Uuid
  isNew       Boolean    @default(true) @map("is_new")
  isActive    Boolean    @default(true) @map("is_active")
  variants    ProductVariant[]
  favorites   Favorite[]
  category    Category   @relation(fields: [categoryId], references: [id])
  reviews     Review[]
  orderItems  OrderItem[]

  @@map("products")
}

model ProductVariant {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(6)
  size      String
  price     Decimal  @db.Decimal(10, 2)
  stock     Int      @default(0)
  isActive  Boolean  @default(true) @map("is_active")
  productId String   @map("product_id") @db.Uuid
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  orderItems OrderItem[]

  @@unique([productId, size])
  @@map("product_variants")
}

model Category {
  id          String    @id @default(uuid()) @db.Uuid
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt   DateTime? @map("deleted_at") @db.Timestamptz(6)
  name        String    @db.VarChar(255)
  image       String?   @db.Text
  description String?   @db.Text
  isActive    Boolean   @default(true) @map("is_active")
  products    Product[]

  @@map("categories")
}

model Order {
  id              String      @id @default(uuid()) @db.Uuid
  orderNumber     String?     @unique @map("order_number") @db.VarChar(50)
  createdAt       DateTime    @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime    @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  userId          String      @map("user_id") @db.Uuid
  status          OrderStatus @default(PENDING)
  totalAmount     Decimal     @map("total_amount") @db.Decimal(10, 2)
  shippingAddress Json        @map("shipping_address")
  phoneNumber     String      @map("phone_number") @db.VarChar(20)
  items           OrderItem[]
  trackingNumber  String?     @map("tracking_number") @db.VarChar(255)
  profile         Profile     @relation(fields: [userId], references: [userId])

  @@map("orders")
}

model OrderItem {
  id          String   @id @default(uuid()) @db.Uuid
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  orderId     String   @map("order_id") @db.Uuid
  productId   String   @map("product_id") @db.Uuid
  variantId   String   @map("variant_id") @db.Uuid
  quantity    Int
  price       Decimal  @db.Decimal(10, 2)
  size        String   @db.VarChar(10)
  productName String   @map("product_name") @db.VarChar(255)
  productImage String  @map("product_image") @db.Text
  order       Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product     Product  @relation(fields: [productId], references: [id])
  variant     ProductVariant @relation(fields: [variantId], references: [id])

  @@map("order_items")
}

model Review {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(6)
  userId    String   @map("user_id") @db.Uuid
  productId String   @map("product_id") @db.Uuid
  rating    Int      @db.Integer
  comment   String   @db.Text
  isActive  Boolean  @default(true) @map("is_active")
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  profile   Profile  @relation(fields: [userId], references: [userId])

  @@map("reviews")
}

model Profile {
  id          String    @id @default(uuid()) @db.Uuid
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt   DateTime? @map("deleted_at") @db.Timestamptz(6)
  userId      String    @unique @map("user_id") @db.Uuid
  email       String    @unique @db.VarChar(255)
  fullName    String?   @map("full_name")
  avatarUrl   String?   @map("avatar_url")
  favorites   Favorite[]
  orders      Order[]
  reviews     Review[]

  @@map("profiles")
}

model Favorite {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  userId    String   @map("user_id") @db.Uuid
  productId String   @map("product_id") @db.Uuid
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  profile   Profile  @relation(fields: [userId], references: [userId])

  @@unique([userId, productId])
  @@map("favorites")
}

model Banner {
  id          String    @id @default(uuid()) @db.Uuid
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  title       String    @db.VarChar(255)
  description String    @db.Text
  imageUrl    String    @map("image_url") @db.Text
  isActive    Boolean   @default(true) @map("is_active")

  @@map("banners")
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED

  @@map("order_status")
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED

  @@map("payment_status")
}


