generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

model Product {
  id             String     @id @default(uuid()) @db.Uuid
  createdAt      DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime   @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  name           String     @db.VarChar(255)
  description    String
  price          Decimal    @db.Decimal(10, 2)
  categoryId     String     @map("category_id") @db.Uuid
  stock          Int        @default(0)
  images         String[]   @default([])
  featured       Boolean    @default(false)
  specifications Json       @default("{}")
  discountPrice  Decimal?   @map("discount_price") @db.Decimal(10, 2)
  brand          String     @db.VarChar(255)
  favorites      Favorite[]
  category       Category   @relation(fields: [categoryId], references: [id])
  reviews        Review[]

  @@map("products")
  @@schema("public")
}

model Category {
  id          String    @id @default(uuid()) @db.Uuid
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  name        String    @db.VarChar(255)
  description String?
  image       String?
  products    Product[]

  @@map("categories")
  @@schema("public")
}

model Order {
  id                String        @id @default(uuid()) @db.Uuid
  createdAt         DateTime      @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime      @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  userId            String        @map("user_id") @db.Uuid
  status            OrderStatus
  totalAmount       Decimal       @map("total_amount") @db.Decimal(10, 2)
  shippingAddress   Json          @map("shipping_address")
  billingAddress    Json          @map("billing_address")
  paymentStatus     PaymentStatus @map("payment_status")
  paymentMethod     String        @map("payment_method") @db.VarChar(50)
  items             Json[]
  trackingNumber    String?       @map("tracking_number") @db.VarChar(255)
  estimatedDelivery DateTime?     @map("estimated_delivery") @db.Timestamptz(6)
  giftMessage       String?       @map("gift_message")
  profile           Profile       @relation(fields: [userId], references: [userId])

  @@map("orders")
  @@schema("public")
}

model Review {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  userId    String   @map("user_id") @db.Uuid
  productId String   @map("product_id") @db.Uuid
  rating    Int
  comment   String
  product   Product  @relation(fields: [productId], references: [id])
  profile   Profile  @relation(fields: [userId], references: [userId])

  @@map("reviews")
  @@schema("public")
}

model Profile {
  id            String     @id @db.Uuid
  createdAt     DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime   @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt     DateTime?  @map("deleted_at") @db.Timestamptz(6)
  userId        String     @unique @map("user_id") @db.Uuid
  email         String     @unique @db.VarChar(255)
  fullName      String?    @map("full_name")
  avatarUrl     String?    @map("avatar_url")
  favorites     Favorite[]
  orders        Order[]
  reviews       Review[]

  @@map("profiles")
  @@schema("public")
}

model Favorite {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  userId    String   @map("user_id") @db.Uuid
  productId String   @map("product_id") @db.Uuid
  product   Product  @relation(fields: [productId], references: [id])
  profile   Profile  @relation(fields: [userId], references: [userId])

  @@unique([userId, productId])
  @@map("favorites")
  @@schema("public")
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED

  @@map("order_status")
  @@schema("public")
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED

  @@map("payment_status")
  @@schema("public")
}
